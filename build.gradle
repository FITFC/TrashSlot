buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

def BUILD_NUMBER = System.getenv("BUILD_NUMBER") ?: "0"
def MAVEN_REPO = System.getenv("MAVEN_REPO") ?: ""
def MAVEN_USERNAME = System.getenv("MAVEN_USERNAME") ?: ""
def MAVEN_PASSWORD = System.getenv("MAVEN_PASSWORD") ?: ""

version = "1.0." + BUILD_NUMBER
sourceCompatibility = 1.8
targetCompatibility = 1.8
group = "net.blay09.mods"
archivesBaseName = "modid"

minecraft {
    version = "1.9-12.16.0.1767-1.9"
    runDir = "run"
    
    mappings = "snapshot_20160312"
}

repositories {

}

dependencies {
    
}

processResources{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from sourceSets.api.output
    appendix "mc" + minecraft.version

    //manifest {
    //    attributes('FMLAT': 'modid_at.cfg')
    //}
}

sourceJar {
    appendix "mc" + minecraft.version
}

task jarJavadoc(type: Jar, dependsOn: 'javadoc') {
    from "build/docs/javadoc"
    classifier "javadoc"

    appendix "mc" + minecraft.version
}

task jarAPI(type: Jar) {
    from sourceSets.api.output

    classifier "api"
    appendix "mc" + minecraft.version
}

task jarDev(type: Jar) {
    from sourceSets.main.output
    from sourceSets.api.output

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    classifier "dev"
    appendix "mc" + minecraft.version

    //manifest {
    //    attributes('FMLAT': 'modid_at.cfg')
    //}
}

artifacts {
    archives jarAPI
    archives jarDev
    archives jarJavadoc
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO) {
                authentication(userName: MAVEN_USERNAME, password: MAVEN_PASSWORD)
            }

            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
            }

            pom.withXml {
                asNode().dependencies.dependency.findAll {
                    it.scope.text() == "compile"
                }.each {
                    if(it.optional)
                        it.optional.value = 'true'
                    else
                        it.appendNode('optional', 'true');
                }
            }
        }
    }
}
